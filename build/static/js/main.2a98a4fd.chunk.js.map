{"version":3,"sources":["components/App/logo.svg","actions/index.js","components/App/App.js","containers/AppContainer.js","components/About/About.js","routes.js","reducers/demo.js","reducers/index.js","index.js"],"names":["module","exports","EXPRESS_TEST_START","expressTestStart","type","EXPRESS_TEST_RESULTS","expressTestResults","data","EXPRESS_TEST_ERROR","expressTestError","EXPRESS_TEST","expressTest","dispatch","axios","get","then","res","JSON","stringify","catch","err","DB_TEST_START","dbTestStart","DB_TEST_RESULTS","dbTestResults","DB_TEST_ERROR","dbTestError","DB_TEST","dbTest","console","log","App","this","props","className","actions","classnames","src","logo","alt","to","onClick","style","padding","results","Component","connect","state","demo","bindActionCreators","Actions","About","Routes","exact","path","component","initialState","action","Reducers","combineReducers","routing","routerReducer","middleware","applyMiddleware","thunk","createLogger","store","createStore","rootReducer","ReactDOM","render","document","getElementById"],"mappings":"wGAAAA,EAAOC,QAAU,IAA0B,kC,07BCE9BC,EAAqB,qBACrBC,EAAmB,WAC5B,MAAO,CAAEC,KAAMF,IAGNG,EAAuB,uBACvBC,EAAqB,SAACC,GAC/B,MAAO,CAAEH,KAAMC,EAAsBE,SAG5BC,EAAqB,qBACrBC,EAAmB,SAACF,GAC7B,MAAO,CAAEH,KAAMI,EAAoBD,SAG1BG,EAAe,eACfC,EAAc,WACvB,OAAO,SAAAC,GACHA,EAAST,KACTU,IAAMC,IAAN,qBACKC,MAAK,SAAAC,GAAG,OAAIJ,EAASN,EAAmBW,KAAKC,UAAUF,EAAIT,WAC3DY,OAAM,SAAAC,GAAG,OAAIR,EAASH,EAAiBW,SAKvCC,EAAgB,gBAChBC,EAAc,WACvB,MAAO,CAAElB,KAAMiB,IAENE,EAAkB,kBAClBC,EAAgB,SAACjB,GAC1B,MAAO,CAAEH,KAAMmB,EAAiBhB,SAEvBkB,EAAgB,gBAChBC,EAAc,SAACnB,GACxB,MAAO,CAAEH,KAAMqB,EAAelB,SAGrBoB,EAAU,UACVC,EAAS,WAClB,OAAO,SAAAhB,GACHA,EAASU,KACTT,IAAMC,IAAN,iBACKC,MAAK,SAAAC,GAAG,OAAIa,QAAQC,IAAId,IAAQJ,EAASY,EAAcP,KAAKC,UAAUF,EAAIT,WAC1EY,OAAM,SAAAC,GAAG,OAAIR,EAASc,EAAYN,S,yGCdhCW,G,uLAzBH,IAAD,EACyBC,KAAKC,MAA7BC,EADD,EACCA,UAAcD,EADf,6BAGP,OADAJ,QAAQC,IAAIE,KAAKC,MAAME,SAErB,uCAAKD,UAAWE,IAAW,MAAOF,IAAgBD,GAChD,yBAAKC,UAAU,cACb,yBAAKG,IAAKC,IAAMJ,UAAU,WAAWK,IAAI,SACzC,+CAEF,uBAAGL,UAAU,aAAb,4DAGA,kBAAC,IAAD,CAAMM,GAAG,SAAQ,sDACjB,6BACA,6BACA,4BAAQC,QAAST,KAAKC,MAAME,QAAQxB,aAApC,8BACA,6BACA,6BACA,4BAAQ8B,QAAST,KAAKC,MAAME,QAAQP,QAApC,6CACA,yBAAKc,MAAO,CAAEC,QAAS,SAAWX,KAAKC,MAAMW,c,GArBnCC,cCYHC,mBAZf,SAAyBC,GACvB,MAAO,CACLH,QAASG,EAAMC,KAAKJ,YAIxB,SAA4BhC,GAC1B,MAAO,CACLuB,QAASc,YAAmBC,EAAStC,MAI1BkC,CAA6Cf,GCZvCoB,G,uLACT,IAAD,EACyBnB,KAAKC,MAA7BC,EADD,EACCA,UAAcD,EADf,6BAEP,OACE,uCAAKC,UAAWE,IAAW,QAASF,IAAgBD,GAClD,0D,GAL2BY,c,QCWpBO,EAXA,WACb,OACE,kBAAC,IAAD,KACE,6BACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWxB,IACjC,kBAAC,IAAD,CAAOsB,OAAK,EAACC,KAAK,SAASC,UAAWJ,O,wCCTxCK,EAAe,CACjBZ,QAAS,IAkBEI,EAfF,WAAmC,IAAlCD,EAAiC,uDAAzBS,EAAcC,EAAW,uCAC3C,OAAQA,EAAOrD,MACX,KAAKC,EAEL,KAAKkB,EACD,OAAO,eAAKwB,EAAZ,CAAmBH,QAAS,oBAAsBa,EAAOlD,OAC7D,KAAKC,EAEL,KAAKiB,EACD,OAAO,eAAKsB,EAAZ,CAAmBH,QAAS,iBAAmBa,EAAOlD,OAC1D,QACI,OAAOwC,ICPJW,EALEC,YAAgB,CAC7BX,OACAY,QAASC,kBCPb,sCAYA,IAAMC,EAAaC,YAAgBC,IAAOC,0BAC7BC,EAAQC,YAAYC,EAAaN,GAE9CO,IAASC,OACP,kBAAC,IAAD,CAAUJ,MAAOA,GACf,kBAAC,EAAD,OAEFK,SAASC,eAAe,W","file":"static/js/main.2a98a4fd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import axios from 'axios';\n\nexport const EXPRESS_TEST_START = \"EXPRESS_TEST_START\";\nexport const expressTestStart = () => {\n    return { type: EXPRESS_TEST_START }\n}\n\nexport const EXPRESS_TEST_RESULTS = \"EXPRESS_TEST_RESULTS\";\nexport const expressTestResults = (data) => {\n    return { type: EXPRESS_TEST_RESULTS, data }\n}\n\nexport const EXPRESS_TEST_ERROR = \"EXPRESS_TEST_ERROR\";\nexport const expressTestError = (data) => {\n    return { type: EXPRESS_TEST_ERROR, data }\n}\n\nexport const EXPRESS_TEST = \"EXPRESS_TEST\";\nexport const expressTest = () => {\n    return dispatch => {\n        dispatch(expressTestStart());\n        axios.get(`/api/express-test`)\n            .then(res => dispatch(expressTestResults(JSON.stringify(res.data))))\n            .catch(err => dispatch(expressTestError(err)))\n\n    }\n}\n\nexport const DB_TEST_START = \"DB_TEST_START\";\nexport const dbTestStart = () => {\n    return { type: DB_TEST_START }\n}\nexport const DB_TEST_RESULTS = \"DB_TEST_RESULTS\";\nexport const dbTestResults = (data) => {\n    return { type: DB_TEST_RESULTS, data }\n}\nexport const DB_TEST_ERROR = \"DB_TEST_ERROR\";\nexport const dbTestError = (data) => {\n    return { type: DB_TEST_ERROR, data }\n}\n\nexport const DB_TEST = \"DB_TEST\"\nexport const dbTest = () => {\n    return dispatch => {\n        dispatch(dbTestStart());\n        axios.get(`/api/products`)\n            .then(res => console.log(res) || dispatch(dbTestResults(JSON.stringify(res.data))))\n            .catch(err => dispatch(dbTestError(err)))\n\n    }\n}","import React, { Component } from 'react';\nimport classnames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport logo from './logo.svg';\nimport './style.css';\n\nclass App extends Component {\n\n  render() {\n    const { className, ...props } = this.props;\n    console.log(this.props.actions)\n    return (\n      <div className={classnames('App', className)} {...props}>\n        <div className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <h2>EKT Classroom!</h2>\n        </div>\n        <p className=\"App-intro\">\n          Select Teachers to find associated classes and students. \n        </p>\n        <Link to='about'><button>Test React Router</button></Link>\n        <br />\n        <br />\n        <button onClick={this.props.actions.expressTest}>Test if Express is working</button>\n        <br />\n        <br />\n        <button onClick={this.props.actions.dbTest}>Test if Express and Sequelize are working</button>\n        <div style={{ padding: '30px' }}>{this.props.results}</div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import * as Actions from '../actions'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux';\n\nimport App from '../components/App/App'\n\nfunction mapStateToProps(state) {\n  return {\n    results: state.demo.results\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators(Actions, dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// src/components/About/index.js\nimport React, { Component } from 'react';\nimport classnames from 'classnames';\n\nimport './style.css';\n\nexport default class About extends Component {\n  render() {\n    const { className, ...props } = this.props;\n    return (\n      <div className={classnames('About', className)} {...props}>\n        <h1>\n          React Router working!\n        </h1>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport App from './containers/AppContainer';\nimport About from './components/About/About';\n\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nconst Routes = () => {\n  return (\n    <Router>\n      <div>\n        <Route exact path=\"/\" component={App} />\n        <Route exact path=\"/about\" component={About} />\n      </div>\n    </Router>\n  )\n};\n\nexport default Routes;\n","import { EXPRESS_TEST_RESULTS, DB_TEST_RESULTS, EXPRESS_TEST_ERROR, DB_TEST_ERROR } from '../actions';\n\nconst initialState = {\n    results: ''\n}\n\nconst demo = (state = initialState, action) => {\n    switch (action.type) {\n        case EXPRESS_TEST_RESULTS:\n            return { ...state, results: \"Test Succeeded!  \" + action.data }\n        case DB_TEST_RESULTS:\n            return { ...state, results: \"Test Succeeded!  \" + action.data }\n        case EXPRESS_TEST_ERROR:\n            return { ...state, results: \"Test Failed!  \" + action.data }\n        case DB_TEST_ERROR:\n            return { ...state, results: \"Test Failed!  \" + action.data }\n        default:\n            return state\n    }\n}\n\nexport default demo;","import { combineReducers } from 'redux';\nimport { routerReducer } from 'react-router-redux';\n\nimport demo from './demo';\n\nconst Reducers = combineReducers({\n    demo,\n    routing: routerReducer\n});\n\nexport default Reducers;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Routes from './routes';\n\nimport './index.css';\n\nimport { Provider } from 'react-redux';\nimport { applyMiddleware, createStore } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst middleware = applyMiddleware(thunk, createLogger());\nexport const store = createStore(rootReducer, middleware);\n\nReactDOM.render(\n  <Provider store={store}>\n    <Routes />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}